name: nuxter

services:
  caddy:
    image: caddy:latest
    restart: unless-stopped
    environment:
      - VUE_AI_TOOLS_DOMAIN=${VUE_AI_TOOLS_DOMAIN}
      - CHRISPAGANON_DOMAIN=${CHRISPAGANON_DOMAIN}
    ports:
      - '80:80'
      - '443:443'
      - '443:443/udp'
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - umami_caddy
      - caddy_authelia
      - vue-ai-tools-production_caddy_nuxt_app
      - vue-ai-tools-production_vector_db
      - vue-ai-tools-staging_caddy_nuxt_app
      - vue-ai-tools-staging_vector_db
      - chrispaganon-production_caddy_nuxt_app
      - chrispaganon-staging_caddy_nuxt_app

  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    environment:
      DATABASE_URL: postgresql://${UMAMI_POSTGRES_USER}:${UMAMI_POSTGRES_PASSWORD}@umami-db:5432/${UMAMI_POSTGRES_DB}
      DATABASE_TYPE: postgresql
      APP_SECRET: ${UMAMI_APP_SECRET}
    depends_on:
      umami-db:
        condition: service_healthy
    restart: always
    networks:
      - umami_caddy
      - umami_db
  umami-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${UMAMI_POSTGRES_DB}
      POSTGRES_USER: ${UMAMI_POSTGRES_USER}
      POSTGRES_PASSWORD: ${UMAMI_POSTGRES_PASSWORD}
    volumes:
      - umami-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - umami_db

  authelia:
    container_name: authelia
    image: 'authelia/authelia:latest'
    restart: always
    expose:
      - 9091
    environment:
      PUID: '1000'
      PGID: '100'
      AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET_FILE: '/secrets/JWT_SECRET'
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: '/secrets/STORAGE_ENCRYPTION_KEY'
      AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE: '/secrets/NOTIFIER_SMTP_PASSWORD'
    volumes:
      - './authelia/config:/config'
      - './authelia/secrets:/secrets'
    networks:
      - caddy_authelia

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: always
    ports:
      - 8080:8080
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
      - '/dev/disk/:/dev/disk:ro'

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - '9090:9090'
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'

  # TODO: Add a backup service here that runs pg_dumpall and uploads the dump to S3 once a week

volumes:
  caddy_data:
  caddy_config:
  umami-db-data:

networks:
  umami_caddy:
  umami_db:
  caddy_authelia:
  vue-ai-tools-production_caddy_nuxt_app:
    name: vue-ai-tools-production_caddy_nuxt_app
    external: true
  vue-ai-tools-production_vector_db:
    name: vue-ai-tools-production_vector_db
    external: true
  vue-ai-tools-staging_caddy_nuxt_app:
    name: vue-ai-tools-staging_caddy_nuxt_app
    external: true
  vue-ai-tools-staging_vector_db:
    name: vue-ai-tools-staging_vector_db
    external: true
  chrispaganon-production_caddy_nuxt_app:
    name: chrispaganon-production_caddy_nuxt_app
    external: true
  chrispaganon-staging_caddy_nuxt_app:
    name: chrispaganon-staging_caddy_nuxt_app
    external: true
